diff --git a/node_modules/react-native-gifted-chat/lib/Bubble.d.ts b/node_modules/react-native-gifted-chat/lib/Bubble.d.ts
index e174a4d..3ec33de 100644
--- a/node_modules/react-native-gifted-chat/lib/Bubble.d.ts
+++ b/node_modules/react-native-gifted-chat/lib/Bubble.d.ts
@@ -51,6 +51,7 @@ export default class Bubble<TMessage extends IMessage = IMessage> extends React.
         touchableProps: {};
         onPress: null;
         onLongPress: null;
+        onDeletePress: null
         renderMessageImage: null;
         renderMessageVideo: null;
         renderMessageAudio: null;
@@ -77,11 +78,14 @@ export default class Bubble<TMessage extends IMessage = IMessage> extends React.
         usernameStyle: {};
         containerToNextStyle: {};
         containerToPreviousStyle: {};
+        showDeleteButton: false;
     };
     static propTypes: {
+        showDeleteButton: PropTypes.Validator<boolean>
         user: PropTypes.Validator<object>;
         touchableProps: PropTypes.Requireable<object>;
         onLongPress: PropTypes.Requireable<(...args: any[]) => any>;
+        onDeletePress: PropTypes.Requireable<(id: string) => void>;
         renderMessageImage: PropTypes.Requireable<(...args: any[]) => any>;
         renderMessageVideo: PropTypes.Requireable<(...args: any[]) => any>;
         renderMessageAudio: PropTypes.Requireable<(...args: any[]) => any>;
@@ -122,6 +126,7 @@ export default class Bubble<TMessage extends IMessage = IMessage> extends React.
             right: PropTypes.Requireable<number | boolean | object>;
         }>>;
     };
+    onDeletePress: (id:string) => void
     onPress: () => void;
     onLongPress: () => void;
     styledBubbleToNext(): (StyleProp<ViewStyle> | {
diff --git a/node_modules/react-native-gifted-chat/lib/Bubble.js b/node_modules/react-native-gifted-chat/lib/Bubble.js
index 70b74ae..7ee9ddc 100644
--- a/node_modules/react-native-gifted-chat/lib/Bubble.js
+++ b/node_modules/react-native-gifted-chat/lib/Bubble.js
@@ -80,7 +80,7 @@ const styles = {
         },
     }),
 };
-const DEFAULT_OPTION_TITLES = ['Copy Text', 'Cancel'];
+const DEFAULT_OPTION_TITLES = ['Copy Text', 'Delete', 'Cancel'];
 export default class Bubble extends React.Component {
     constructor() {
         super(...arguments);
@@ -95,10 +95,10 @@ export default class Bubble extends React.Component {
                 this.props.onLongPress(this.context, this.props.currentMessage);
             }
             else if (currentMessage && currentMessage.text) {
-                const { optionTitles } = this.props;
+                const { optionTitles, showDeleteButton = false, onDeletePress } = this.props;
                 const options = optionTitles && optionTitles.length > 0
-                    ? optionTitles.slice(0, 2)
-                    : DEFAULT_OPTION_TITLES;
+                    ? optionTitles.filter(el => showDeleteButton ? true : el !== 'Delete')
+                    : DEFAULT_OPTION_TITLES.filter(el => showDeleteButton ? true : el !== 'Delete');
                 const cancelButtonIndex = options.length - 1;
                 this.context.actionSheet().showActionSheetWithOptions({
                     options,
@@ -108,6 +108,11 @@ export default class Bubble extends React.Component {
                         case 0:
                             Clipboard.setString(currentMessage.text);
                             break;
+                        case 1:
+                            if(showDeleteButton && onDeletePress) {
+                            onDeletePress(currentMessage._id)
+                            }
+                            break;
                         default:
                             break;
                     }
@@ -234,11 +239,13 @@ export default class Bubble extends React.Component {
             if (renderUsername) {
                 return renderUsername(currentMessage.user);
             }
-            return (<View style={styles.content.usernameView}>
-          <Text style={[styles.content.username, this.props.usernameStyle]}>
-            ~ {currentMessage.user.name}
-          </Text>
-        </View>);
+            if(currentMessage.user.name)  {
+                return (<View style={styles.content.usernameView}>
+                    <Text style={[styles.content.username, this.props.usernameStyle]}>
+                      ~ {currentMessage.user.name}
+                    </Text>
+                  </View>);
+            }
         }
         return null;
     }
@@ -326,9 +333,11 @@ Bubble.defaultProps = {
     containerToPreviousStyle: {},
 };
 Bubble.propTypes = {
+    showDeleteButton: PropTypes.bool,
     user: PropTypes.object.isRequired,
     touchableProps: PropTypes.object,
     onLongPress: PropTypes.func,
+    onDeletePress: PropTypes.func,
     renderMessageImage: PropTypes.func,
     renderMessageVideo: PropTypes.func,
     renderMessageAudio: PropTypes.func,
